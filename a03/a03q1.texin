{\bf Idea} It is possible to break the intervals into subsets, such that the elements share the same sub-intervals.
The number of greedy colourings depends the subsets that has the most elements (claim \ref{claim:GIC_k_colourings}).
Then, we will show that the greedy colouring is optimal (claim \ref{claim:GIC_optimal}).
\begin{defn}
Let's define a finite set of intervals $S$.
\begin{align*}
S = \{ A_i = (s,f) : 1 \le i \le n \}
\end{align*}
\end{defn}
\begin{defn}
The {\bf overlapping set} $T$.
\begin{align*}
T = \{ A_i \in S : \text{all $A_i$ have {\bf the same} common sub-intervals} \}
\end{align*}
\end{defn}
If intervals $x,y,z \in S$ all overlap each others, then it is possible that $T = \{x\}, \{x,y\}, \{x,y,z\}$, etc.
However, I only want the largest of such sets ($\{x,y,z\}$), so let's make another defintion.
\begin{defn}
The {\bf maximum-overlapping set} $U = T_i$, such that $T_i \not\subset T_j, i \neq j$.
\end{defn}
Notice that we can have many $U$'s for $S$.
Since we can have intervals $a,b,c$ such that $a$ overlap with $b$ and $c$, but $b$ and $c$ are disjoint.
So we can have $U_1 = \{a,b\}$ and $U_2 = \{a,c\}$.
\begin{claim}\label{claim:GIC_k_colourings}
For the {\tt Greedy Interval Colouring (GIC)} algorithm, a set of intervals $S$ needs exactly $k$ colours if and only if $|max(\{U\})| = k$.
\end{claim}
\begin{proof}
Let's do the proof in 2 directions.

Multiple max-overlapping sets can either be disjoint or have some common elements, as explained before.
If they are disjoint, $finish[c] \le s_i$ is true initially and {\tt GIC} will reuse the colour $c$.
If they have some common elements, then those elements are already being coloured.
In both cases, previous colourings are being reused.

In the next iteration, $finish[c] \le s_i$ will become false because an overlapping interval has found, so {\tt GIC} will look for the next available colour.
Either {\tt GIC} has enough colours in its existing pool, or it will add more -- so that each element in $U$ has its own colour which can be shared with other $U$'s.

\begin{itemize}
\item
{\bf ($\bm\rightarrow$ direction)}
Since {\tt GIC} keeps track of the highest $U$ with a colour pool and add new colours to the pool only when overlapping happens, and it needs $k$ colours; thus, we have $|max(\{U\})| = k$.
\item
{\bf ($\bm\leftarrow$ direction)} Suppose $|max(\{U\})| = |U_i| = k$.
Since each element has its own colour, so {\tt GIC} will need exactly $k$ colours.
\end{itemize}
With both directions together, the claim holds.
\end{proof}
The previous claim establishes the number of colours that {\tt GIC} will use, now we have to prove that {\tt GIC} is optimal.
\begin{claim}\label{claim:GIC_optimal}
The optimal number of colours for the interval colouring is $|max(\{U\})| = k$.
\end{claim}
\begin{proof}
Suppose by way of contradiction that $g < k$ colouring is optimal.
However, we have $k$ overlapping intervals but we only have $g$ colours.
By the pigeonhole principle, at least one interval will share the same colour.
Hence, we arrive a contradiction.

Since by claim \ref{claim:GIC_k_colourings}  an algorithm that returns a $k$-colouring exists, $k$ is the optimal number for the interval-colouring problem.
\end{proof}
Therefore, the greedy algorithm for the interval colouring problem discovers the optimal solution.
\done
